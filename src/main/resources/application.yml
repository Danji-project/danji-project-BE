server:
  port: 8080

spring:
  profiles:
    active: ${SPRING_PROFILES_ACTIVE:local}   # 기본 설정, 추후 배포시 환경변수로 변경 가능
  datasource:
    hikari:
      maximum-pool-size: 50 # HikariCP 연결 풀 크기 설정

  security:
    oauth2:
      client:
        registration:
          google:
            client-id: ${GOOGLE_CLIENT_ID} # 발급 받은 Client ID
            client-secret: ${GOOGLE_CLIENT_SECRET} # 발급 받은 Client Secret
            redirect-uri: ${REDIRECT_URI:http://localhost:8080}/login/oauth2/code/google
            scope: # 기본 값 openid,profile,email => profile, email 로 설정 변경
              - profile
              - email

          naver:
            client-id: ${NAVER_CLIENT_ID}  # 발급 받은 Client ID
            client-secret: ${NAVER_CLIENT_SECRET}  # 발급 받은 Client Secret
#            client-authentication-method: client_secret_post
            authorization-grant-type: authorization_code
            redirect-uri: ${REDIRECT_URI:http://localhost:8080}/login/oauth2/code/naver
            scope:
              - name
              - email
              - profile_image
            client-name: Naver

          kakao:
            client-id: ${KAKAO_CLIENT_ID} # 발급 받은 Client ID
#            client-secret: # 발급 받은 Client Secret
            client-authentication-method: client_secret_post
            authorization-grant-type: authorization_code
            scope: # https://developers.kakao.com/docs/latest/ko/kakaologin/common#user-info
              - profile_nickname
              - profile_image
              - account_email
            redirect-uri: ${REDIRECT_URI:http://localhost:8080}/login/oauth2/code/kakao
            client-name: Kakao

        provider:
          naver:
            authorization-uri: https://nid.naver.com/oauth2.0/authorize
            token-uri: https://nid.naver.com/oauth2.0/token
            user-info-uri: https://openapi.naver.com/v1/nid/me
#            user-info-authentication-method: header
            user-name-attribute: response # Naver 응답 값 resultCode, message, response 중 response 지정

          kakao:
            authorization-uri: https://kauth.kakao.com/oauth/authorize
            token-uri: https://kauth.kakao.com/oauth/token
            user-info-uri: https://kapi.kakao.com/v2/user/me
#            user-info-authentication-method: header
            user-name-attribute: id # Kakao 응답 값 id, connected_at, properties, kakao_account 중 id 지정

  mail:
    host: smtp.gmail.com
    port: 587
    username: ${MAIL_USERNAME}
    password: ${MAIL_PASSWORD}
    properties:
      mail:
        smtp:
          auth: true
          timeout: 5000
          connectiontimeout: 5000
          writetimeout: 5000
          starttls:
            enable: true
            required: true
    auth-code-expiration-millis: 1800000  # 30 * 60 * 1000 == 30분

  data:
    redis:
      host: ${REDIS_HOST:127.0.0.1}
      port: 6379
      password: ${REDIS_PASSWORD:test}

    mongodb:
      uri: mongodb://localhost:27017/danjitalk?retryWrites=true&w=majority

aws:
  s3:
    region: ${AWS_REGION:test}
    access-key: ${AWS_ACCESS_KEY:test}
    secret-key: ${AWS_SECRET_ACCESS_KEY:test}
    bucket-name: ${AWS_BUCKET_NAME:test}

jwt:
  secret:
    access: ${ACCESS_SECRET:test52152131312313312312321313asdsadsasadsdsadsasdsaadsdsadsds}
    refresh: ${REFRESH_SECRET:test52152131312313312312321313asdsadsasadsdsadsasdsaadsdsadsds}

# 스케줄러 on / off
scheduler:
  enabled: false