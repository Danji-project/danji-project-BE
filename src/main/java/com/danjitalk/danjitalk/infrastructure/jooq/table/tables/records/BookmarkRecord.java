/*
 * This file is generated by jOOQ.
 */
package com.danjitalk.danjitalk.infrastructure.jooq.table.tables.records;


import com.danjitalk.danjitalk.infrastructure.jooq.table.tables.Bookmark;

import java.time.LocalDateTime;

import org.jooq.Field;
import org.jooq.Record1;
import org.jooq.Record5;
import org.jooq.Row5;
import org.jooq.impl.UpdatableRecordImpl;


/**
 * This class is generated by jOOQ.
 */
@SuppressWarnings({ "all", "unchecked", "rawtypes" })
public class BookmarkRecord extends UpdatableRecordImpl<BookmarkRecord> implements Record5<Long, LocalDateTime, LocalDateTime, Long, Long> {

    private static final long serialVersionUID = 1L;

    /**
     * Setter for <code>danjitalk.bookmark.id</code>.
     */
    public void setId(Long value) {
        set(0, value);
    }

    /**
     * Getter for <code>danjitalk.bookmark.id</code>.
     */
    public Long getId() {
        return (Long) get(0);
    }

    /**
     * Setter for <code>danjitalk.bookmark.created_at</code>.
     */
    public void setCreatedAt(LocalDateTime value) {
        set(1, value);
    }

    /**
     * Getter for <code>danjitalk.bookmark.created_at</code>.
     */
    public LocalDateTime getCreatedAt() {
        return (LocalDateTime) get(1);
    }

    /**
     * Setter for <code>danjitalk.bookmark.updated_at</code>.
     */
    public void setUpdatedAt(LocalDateTime value) {
        set(2, value);
    }

    /**
     * Getter for <code>danjitalk.bookmark.updated_at</code>.
     */
    public LocalDateTime getUpdatedAt() {
        return (LocalDateTime) get(2);
    }

    /**
     * Setter for <code>danjitalk.bookmark.feed_id</code>.
     */
    public void setFeedId(Long value) {
        set(3, value);
    }

    /**
     * Getter for <code>danjitalk.bookmark.feed_id</code>.
     */
    public Long getFeedId() {
        return (Long) get(3);
    }

    /**
     * Setter for <code>danjitalk.bookmark.member_id</code>.
     */
    public void setMemberId(Long value) {
        set(4, value);
    }

    /**
     * Getter for <code>danjitalk.bookmark.member_id</code>.
     */
    public Long getMemberId() {
        return (Long) get(4);
    }

    // -------------------------------------------------------------------------
    // Primary key information
    // -------------------------------------------------------------------------

    @Override
    public Record1<Long> key() {
        return (Record1) super.key();
    }

    // -------------------------------------------------------------------------
    // Record5 type implementation
    // -------------------------------------------------------------------------

    @Override
    public Row5<Long, LocalDateTime, LocalDateTime, Long, Long> fieldsRow() {
        return (Row5) super.fieldsRow();
    }

    @Override
    public Row5<Long, LocalDateTime, LocalDateTime, Long, Long> valuesRow() {
        return (Row5) super.valuesRow();
    }

    @Override
    public Field<Long> field1() {
        return Bookmark.BOOKMARK.ID;
    }

    @Override
    public Field<LocalDateTime> field2() {
        return Bookmark.BOOKMARK.CREATED_AT;
    }

    @Override
    public Field<LocalDateTime> field3() {
        return Bookmark.BOOKMARK.UPDATED_AT;
    }

    @Override
    public Field<Long> field4() {
        return Bookmark.BOOKMARK.FEED_ID;
    }

    @Override
    public Field<Long> field5() {
        return Bookmark.BOOKMARK.MEMBER_ID;
    }

    @Override
    public Long component1() {
        return getId();
    }

    @Override
    public LocalDateTime component2() {
        return getCreatedAt();
    }

    @Override
    public LocalDateTime component3() {
        return getUpdatedAt();
    }

    @Override
    public Long component4() {
        return getFeedId();
    }

    @Override
    public Long component5() {
        return getMemberId();
    }

    @Override
    public Long value1() {
        return getId();
    }

    @Override
    public LocalDateTime value2() {
        return getCreatedAt();
    }

    @Override
    public LocalDateTime value3() {
        return getUpdatedAt();
    }

    @Override
    public Long value4() {
        return getFeedId();
    }

    @Override
    public Long value5() {
        return getMemberId();
    }

    @Override
    public BookmarkRecord value1(Long value) {
        setId(value);
        return this;
    }

    @Override
    public BookmarkRecord value2(LocalDateTime value) {
        setCreatedAt(value);
        return this;
    }

    @Override
    public BookmarkRecord value3(LocalDateTime value) {
        setUpdatedAt(value);
        return this;
    }

    @Override
    public BookmarkRecord value4(Long value) {
        setFeedId(value);
        return this;
    }

    @Override
    public BookmarkRecord value5(Long value) {
        setMemberId(value);
        return this;
    }

    @Override
    public BookmarkRecord values(Long value1, LocalDateTime value2, LocalDateTime value3, Long value4, Long value5) {
        value1(value1);
        value2(value2);
        value3(value3);
        value4(value4);
        value5(value5);
        return this;
    }

    // -------------------------------------------------------------------------
    // Constructors
    // -------------------------------------------------------------------------

    /**
     * Create a detached BookmarkRecord
     */
    public BookmarkRecord() {
        super(Bookmark.BOOKMARK);
    }

    /**
     * Create a detached, initialised BookmarkRecord
     */
    public BookmarkRecord(Long id, LocalDateTime createdAt, LocalDateTime updatedAt, Long feedId, Long memberId) {
        super(Bookmark.BOOKMARK);

        setId(id);
        setCreatedAt(createdAt);
        setUpdatedAt(updatedAt);
        setFeedId(feedId);
        setMemberId(memberId);
        resetChangedOnNotNull();
    }
}
