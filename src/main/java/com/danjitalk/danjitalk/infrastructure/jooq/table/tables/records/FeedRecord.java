/*
 * This file is generated by jOOQ.
 */
package com.danjitalk.danjitalk.infrastructure.jooq.table.tables.records;


import com.danjitalk.danjitalk.infrastructure.jooq.table.tables.Feed;

import java.time.LocalDateTime;

import org.jooq.Field;
import org.jooq.Record1;
import org.jooq.Record12;
import org.jooq.Row12;
import org.jooq.impl.UpdatableRecordImpl;


/**
 * This class is generated by jOOQ.
 */
@SuppressWarnings({ "all", "unchecked", "rawtypes" })
public class FeedRecord extends UpdatableRecordImpl<FeedRecord> implements Record12<Integer, Integer, Long, LocalDateTime, Long, Long, LocalDateTime, String, String, String, String, String> {

    private static final long serialVersionUID = 1L;

    /**
     * Setter for <code>test.feed.comment_count</code>.
     */
    public void setCommentCount(Integer value) {
        set(0, value);
    }

    /**
     * Getter for <code>test.feed.comment_count</code>.
     */
    public Integer getCommentCount() {
        return (Integer) get(0);
    }

    /**
     * Setter for <code>test.feed.reaction_count</code>.
     */
    public void setReactionCount(Integer value) {
        set(1, value);
    }

    /**
     * Getter for <code>test.feed.reaction_count</code>.
     */
    public Integer getReactionCount() {
        return (Integer) get(1);
    }

    /**
     * Setter for <code>test.feed.apartment_id</code>.
     */
    public void setApartmentId(Long value) {
        set(2, value);
    }

    /**
     * Getter for <code>test.feed.apartment_id</code>.
     */
    public Long getApartmentId() {
        return (Long) get(2);
    }

    /**
     * Setter for <code>test.feed.created_at</code>.
     */
    public void setCreatedAt(LocalDateTime value) {
        set(3, value);
    }

    /**
     * Getter for <code>test.feed.created_at</code>.
     */
    public LocalDateTime getCreatedAt() {
        return (LocalDateTime) get(3);
    }

    /**
     * Setter for <code>test.feed.id</code>.
     */
    public void setId(Long value) {
        set(4, value);
    }

    /**
     * Getter for <code>test.feed.id</code>.
     */
    public Long getId() {
        return (Long) get(4);
    }

    /**
     * Setter for <code>test.feed.member_id</code>.
     */
    public void setMemberId(Long value) {
        set(5, value);
    }

    /**
     * Getter for <code>test.feed.member_id</code>.
     */
    public Long getMemberId() {
        return (Long) get(5);
    }

    /**
     * Setter for <code>test.feed.updated_at</code>.
     */
    public void setUpdatedAt(LocalDateTime value) {
        set(6, value);
    }

    /**
     * Getter for <code>test.feed.updated_at</code>.
     */
    public LocalDateTime getUpdatedAt() {
        return (LocalDateTime) get(6);
    }

    /**
     * Setter for <code>test.feed.file_url</code>.
     */
    public void setFileUrl(String value) {
        set(7, value);
    }

    /**
     * Getter for <code>test.feed.file_url</code>.
     */
    public String getFileUrl() {
        return (String) get(7);
    }

    /**
     * Setter for <code>test.feed.thumbnail_file_url</code>.
     */
    public void setThumbnailFileUrl(String value) {
        set(8, value);
    }

    /**
     * Getter for <code>test.feed.thumbnail_file_url</code>.
     */
    public String getThumbnailFileUrl() {
        return (String) get(8);
    }

    /**
     * Setter for <code>test.feed.title</code>.
     */
    public void setTitle(String value) {
        set(9, value);
    }

    /**
     * Getter for <code>test.feed.title</code>.
     */
    public String getTitle() {
        return (String) get(9);
    }

    /**
     * Setter for <code>test.feed.contents</code>.
     */
    public void setContents(String value) {
        set(10, value);
    }

    /**
     * Getter for <code>test.feed.contents</code>.
     */
    public String getContents() {
        return (String) get(10);
    }

    /**
     * Setter for <code>test.feed.feed_type</code>.
     */
    public void setFeedType(String value) {
        set(11, value);
    }

    /**
     * Getter for <code>test.feed.feed_type</code>.
     */
    public String getFeedType() {
        return (String) get(11);
    }

    // -------------------------------------------------------------------------
    // Primary key information
    // -------------------------------------------------------------------------

    @Override
    public Record1<Long> key() {
        return (Record1) super.key();
    }

    // -------------------------------------------------------------------------
    // Record12 type implementation
    // -------------------------------------------------------------------------

    @Override
    public Row12<Integer, Integer, Long, LocalDateTime, Long, Long, LocalDateTime, String, String, String, String, String> fieldsRow() {
        return (Row12) super.fieldsRow();
    }

    @Override
    public Row12<Integer, Integer, Long, LocalDateTime, Long, Long, LocalDateTime, String, String, String, String, String> valuesRow() {
        return (Row12) super.valuesRow();
    }

    @Override
    public Field<Integer> field1() {
        return Feed.FEED.COMMENT_COUNT;
    }

    @Override
    public Field<Integer> field2() {
        return Feed.FEED.REACTION_COUNT;
    }

    @Override
    public Field<Long> field3() {
        return Feed.FEED.APARTMENT_ID;
    }

    @Override
    public Field<LocalDateTime> field4() {
        return Feed.FEED.CREATED_AT;
    }

    @Override
    public Field<Long> field5() {
        return Feed.FEED.ID;
    }

    @Override
    public Field<Long> field6() {
        return Feed.FEED.MEMBER_ID;
    }

    @Override
    public Field<LocalDateTime> field7() {
        return Feed.FEED.UPDATED_AT;
    }

    @Override
    public Field<String> field8() {
        return Feed.FEED.FILE_URL;
    }

    @Override
    public Field<String> field9() {
        return Feed.FEED.THUMBNAIL_FILE_URL;
    }

    @Override
    public Field<String> field10() {
        return Feed.FEED.TITLE;
    }

    @Override
    public Field<String> field11() {
        return Feed.FEED.CONTENTS;
    }

    @Override
    public Field<String> field12() {
        return Feed.FEED.FEED_TYPE;
    }

    @Override
    public Integer component1() {
        return getCommentCount();
    }

    @Override
    public Integer component2() {
        return getReactionCount();
    }

    @Override
    public Long component3() {
        return getApartmentId();
    }

    @Override
    public LocalDateTime component4() {
        return getCreatedAt();
    }

    @Override
    public Long component5() {
        return getId();
    }

    @Override
    public Long component6() {
        return getMemberId();
    }

    @Override
    public LocalDateTime component7() {
        return getUpdatedAt();
    }

    @Override
    public String component8() {
        return getFileUrl();
    }

    @Override
    public String component9() {
        return getThumbnailFileUrl();
    }

    @Override
    public String component10() {
        return getTitle();
    }

    @Override
    public String component11() {
        return getContents();
    }

    @Override
    public String component12() {
        return getFeedType();
    }

    @Override
    public Integer value1() {
        return getCommentCount();
    }

    @Override
    public Integer value2() {
        return getReactionCount();
    }

    @Override
    public Long value3() {
        return getApartmentId();
    }

    @Override
    public LocalDateTime value4() {
        return getCreatedAt();
    }

    @Override
    public Long value5() {
        return getId();
    }

    @Override
    public Long value6() {
        return getMemberId();
    }

    @Override
    public LocalDateTime value7() {
        return getUpdatedAt();
    }

    @Override
    public String value8() {
        return getFileUrl();
    }

    @Override
    public String value9() {
        return getThumbnailFileUrl();
    }

    @Override
    public String value10() {
        return getTitle();
    }

    @Override
    public String value11() {
        return getContents();
    }

    @Override
    public String value12() {
        return getFeedType();
    }

    @Override
    public FeedRecord value1(Integer value) {
        setCommentCount(value);
        return this;
    }

    @Override
    public FeedRecord value2(Integer value) {
        setReactionCount(value);
        return this;
    }

    @Override
    public FeedRecord value3(Long value) {
        setApartmentId(value);
        return this;
    }

    @Override
    public FeedRecord value4(LocalDateTime value) {
        setCreatedAt(value);
        return this;
    }

    @Override
    public FeedRecord value5(Long value) {
        setId(value);
        return this;
    }

    @Override
    public FeedRecord value6(Long value) {
        setMemberId(value);
        return this;
    }

    @Override
    public FeedRecord value7(LocalDateTime value) {
        setUpdatedAt(value);
        return this;
    }

    @Override
    public FeedRecord value8(String value) {
        setFileUrl(value);
        return this;
    }

    @Override
    public FeedRecord value9(String value) {
        setThumbnailFileUrl(value);
        return this;
    }

    @Override
    public FeedRecord value10(String value) {
        setTitle(value);
        return this;
    }

    @Override
    public FeedRecord value11(String value) {
        setContents(value);
        return this;
    }

    @Override
    public FeedRecord value12(String value) {
        setFeedType(value);
        return this;
    }

    @Override
    public FeedRecord values(Integer value1, Integer value2, Long value3, LocalDateTime value4, Long value5, Long value6, LocalDateTime value7, String value8, String value9, String value10, String value11, String value12) {
        value1(value1);
        value2(value2);
        value3(value3);
        value4(value4);
        value5(value5);
        value6(value6);
        value7(value7);
        value8(value8);
        value9(value9);
        value10(value10);
        value11(value11);
        value12(value12);
        return this;
    }

    // -------------------------------------------------------------------------
    // Constructors
    // -------------------------------------------------------------------------

    /**
     * Create a detached FeedRecord
     */
    public FeedRecord() {
        super(Feed.FEED);
    }

    /**
     * Create a detached, initialised FeedRecord
     */
    public FeedRecord(Integer commentCount, Integer reactionCount, Long apartmentId, LocalDateTime createdAt, Long id, Long memberId, LocalDateTime updatedAt, String fileUrl, String thumbnailFileUrl, String title, String contents, String feedType) {
        super(Feed.FEED);

        setCommentCount(commentCount);
        setReactionCount(reactionCount);
        setApartmentId(apartmentId);
        setCreatedAt(createdAt);
        setId(id);
        setMemberId(memberId);
        setUpdatedAt(updatedAt);
        setFileUrl(fileUrl);
        setThumbnailFileUrl(thumbnailFileUrl);
        setTitle(title);
        setContents(contents);
        setFeedType(feedType);
        resetChangedOnNotNull();
    }
}
